{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena-final\\\\package\\\\pages\\\\form\\\\editor.js\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Fragment, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport PageTitle_ from \"../../src/components/PageTitle\";\nimport { moodChange, pageTitle } from \"../../src/redux/action/utils\";\n\nconst FormEditor = ({\n  pageTitle\n}) => {\n  const version = useSelector(state => state.theme.version);\n  useEffect(() => {\n    if (version !== \"dark\") {\n      moodChange();\n    }\n\n    pageTitle(\"Summernote\");\n  }, []);\n\n  const handleEditorChange = (content, editor) => {\n    console.log(\"Content was updated:\", content);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle_, {\n      active: \"Summernote\",\n      mother: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-12 col-xxl-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: \"Tiny MCE Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summernote\",\n              children: /*#__PURE__*/_jsxDEV(Editor, {\n                initialValue: \"<p>This is the initial content of the editor</p>\",\n                init: {\n                  height: 500,\n                  menubar: false,\n                  plugins: [\"advlist autolink lists link image code charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n                  toolbar: \"undo redo | formatselect | code |link | image | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat | help \"\n                },\n                onEditorChange: handleEditorChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default connect(null, {\n  pageTitle\n})(FormEditor);","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/pages/form/editor.js"],"names":["Editor","Fragment","useEffect","connect","useSelector","PageTitle_","moodChange","pageTitle","FormEditor","version","state","theme","handleEditorChange","content","editor","console","log","height","menubar","plugins","toolbar"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,8BAAtC;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAmB;AACpC,QAAME,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,OAAxB,CAA3B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,KAAK,MAAhB,EAAwB;AACtBH,MAAAA,UAAU;AACX;;AACDC,IAAAA,SAAS,CAAC,YAAD,CAAT;AACD,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMK,kBAAkB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,OAApC;AACD,GAFD;;AAGA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAC,YAAnB;AAAgC,MAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,YAAY,EAAC,kDADf;AAEE,gBAAA,IAAI,EAAE;AACJI,kBAAAA,MAAM,EAAE,GADJ;AAEJC,kBAAAA,OAAO,EAAE,KAFL;AAGJC,kBAAAA,OAAO,EAAE,CACP,qEADO,EAEP,4CAFO,EAGP,sDAHO,CAHL;AAQJC,kBAAAA,OAAO,EACL;AACtB;AACA;AAXwB,iBAFR;AAeE,gBAAA,cAAc,EAAER;AAflB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CA9CD;;AAgDA,eAAeT,OAAO,CAAC,IAAD,EAAO;AAAEI,EAAAA;AAAF,CAAP,CAAP,CAA6BC,UAA7B,CAAf","sourcesContent":["import { Editor } from \"@tinymce/tinymce-react\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport PageTitle_ from \"../../src/components/PageTitle\";\r\nimport { moodChange, pageTitle } from \"../../src/redux/action/utils\";\r\nconst FormEditor = ({ pageTitle }) => {\r\n  const version = useSelector((state) => state.theme.version);\r\n  useEffect(() => {\r\n    if (version !== \"dark\") {\r\n      moodChange();\r\n    }\r\n    pageTitle(\"Summernote\");\r\n  }, []);\r\n  const handleEditorChange = (content, editor) => {\r\n    console.log(\"Content was updated:\", content);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <PageTitle_ active=\"Summernote\" mother=\"Form\" />\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12 col-xxl-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Tiny MCE Editor</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"summernote\">\r\n                <Editor\r\n                  initialValue=\"<p>This is the initial content of the editor</p>\"\r\n                  init={{\r\n                    height: 500,\r\n                    menubar: false,\r\n                    plugins: [\r\n                      \"advlist autolink lists link image code charmap print preview anchor\",\r\n                      \"searchreplace visualblocks code fullscreen\",\r\n                      \"insertdatetime media table paste code help wordcount\",\r\n                    ],\r\n                    toolbar:\r\n                      \"undo redo | formatselect | code |link | image | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat | help \",\r\n                  }}\r\n                  onEditorChange={handleEditorChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(null, { pageTitle })(FormEditor);\r\n"]},"metadata":{},"sourceType":"module"}