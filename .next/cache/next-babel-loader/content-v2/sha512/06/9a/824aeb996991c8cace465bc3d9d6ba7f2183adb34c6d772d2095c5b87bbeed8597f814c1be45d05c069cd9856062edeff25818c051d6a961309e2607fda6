{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena-final\\\\package\\\\src\\\\uena\\\\analytics\\\\Revenue.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nvar SalesSummary = /*#__PURE__*/function (_React$Component) {\n  _inherits(SalesSummary, _React$Component);\n\n  var _super = _createSuper(SalesSummary);\n\n  function SalesSummary(props) {\n    var _this;\n\n    _classCallCheck(this, SalesSummary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      series: [{\n        name: \"New Clients\",\n        data: _this.props.data ? _this.props.data : [300, 450, 600, 600, 400, 450, 410, 470, 480, 800, 600, 900, 400]\n      }],\n      options: {\n        chart: {\n          type: \"area\",\n          height: 350,\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: \"55%\",\n            endingShape: \"rounded\"\n          }\n        },\n        colors: [\"#FF720D\"],\n        dataLabels: {\n          enabled: false\n        },\n        markers: {\n          shape: \"circle\"\n        },\n        legend: {\n          show: false\n        },\n        stroke: {\n          show: true,\n          width: 4,\n          curve: \"straight\",\n          colors: [\"#FF720D\"]\n        },\n        grid: {\n          borderColor: \"#eee\"\n        },\n        xaxis: {\n          categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          labels: {\n            style: {\n              colors: \"#7E7F80\",\n              fontSize: \"13px\",\n              fontFamily: \"Poppins\",\n              fontWeight: 100,\n              cssClass: \"apexcharts-xaxis-label\"\n            }\n          },\n          crosshairs: {\n            show: false\n          }\n        },\n        yaxis: {\n          show: true,\n          labels: {\n            style: {\n              colors: \"#7E7F80\",\n              fontSize: \"14px\",\n              fontFamily: \"Poppins\",\n              fontWeight: 100\n            },\n            formatter: function formatter(y) {\n              return y.toFixed(0) + \"k\";\n            }\n          }\n        },\n        fill: {\n          opacity: 1,\n          colors: \"#FAC7B6\"\n        },\n        tooltip: {\n          y: {\n            formatter: function formatter(val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SalesSummary, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"area\",\n          height: 370\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return SalesSummary;\n}(React.Component);\n\nexport default SalesSummary;","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/uena/analytics/Revenue.js"],"names":["React","ReactApexChart","SalesSummary","props","state","series","name","data","options","chart","type","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","colors","dataLabels","enabled","markers","shape","legend","stroke","width","curve","grid","borderColor","xaxis","categories","labels","style","fontSize","fontFamily","fontWeight","cssClass","crosshairs","yaxis","formatter","y","toFixed","fill","opacity","tooltip","val","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass SalesSummary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [\r\n        {\r\n          name: \"New Clients\",\r\n          data: this.props.data\r\n            ? this.props.data\r\n            : [300, 450, 600, 600, 400, 450, 410, 470, 480, 800, 600, 900, 400],\r\n        },\r\n      ],\r\n\r\n      options: {\r\n        chart: {\r\n          type: \"area\",\r\n          height: 350,\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: false,\r\n            columnWidth: \"55%\",\r\n            endingShape: \"rounded\",\r\n          },\r\n        },\r\n        colors: [\"#FF720D\"],\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        markers: {\r\n          shape: \"circle\",\r\n        },\r\n\r\n        legend: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          show: true,\r\n          width: 4,\r\n          curve: \"straight\",\r\n          colors: [\"#FF720D\"],\r\n        },\r\n\r\n        grid: {\r\n          borderColor: \"#eee\",\r\n        },\r\n        xaxis: {\r\n          categories: [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"May\",\r\n            \"Jun\",\r\n            \"July\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n          ],\r\n          labels: {\r\n            style: {\r\n              colors: \"#7E7F80\",\r\n              fontSize: \"13px\",\r\n              fontFamily: \"Poppins\",\r\n              fontWeight: 100,\r\n              cssClass: \"apexcharts-xaxis-label\",\r\n            },\r\n          },\r\n          crosshairs: {\r\n            show: false,\r\n          },\r\n        },\r\n        yaxis: {\r\n          show: true,\r\n          labels: {\r\n            style: {\r\n              colors: \"#7E7F80\",\r\n              fontSize: \"14px\",\r\n              fontFamily: \"Poppins\",\r\n              fontWeight: 100,\r\n            },\r\n            formatter: function (y) {\r\n              return y.toFixed(0) + \"k\";\r\n            },\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 1,\r\n          colors: \"#FAC7B6\",\r\n        },\r\n        tooltip: {\r\n          y: {\r\n            formatter: function (val) {\r\n              return \"$ \" + val + \" thousands\";\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"area\"\r\n          height={370}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SalesSummary;\r\n"]},"metadata":{},"sourceType":"module"}