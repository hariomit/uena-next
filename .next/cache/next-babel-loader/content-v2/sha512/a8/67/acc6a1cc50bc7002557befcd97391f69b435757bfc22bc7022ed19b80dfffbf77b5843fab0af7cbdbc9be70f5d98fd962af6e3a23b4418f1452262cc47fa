{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena-final\\\\package\\\\src\\\\components\\\\table\\\\reactTable\\\\PatientReactTable.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// A great library for fuzzy filtering/sorting items\n// import matchSorter from \"match-sorter\";\nimport dynamic from \"next/dynamic\";\nimport React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { useAsyncDebounce, useExpanded, useFilters, useGlobalFilter, useGroupBy, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"match-sorter\")],\n    modules: [\"match-sorter\"]\n  }\n}); // Define a default UI for filtering\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    className: \"form-control\",\n    placeholder: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"example_filter\",\n    className: \"dataTables_filter\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value || \"\",\n        onChange: e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\nfunction SelectColumnFilter({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows,\n    id\n  }\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: filterValue,\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val; // Be sure to pass our updateMyData and the skipReset option\n\n\nfunction Table({\n  columns,\n  data,\n  skipReset\n}) {\n  const filterTypes = React.useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our default Filter UI\n    Filter: DefaultColumnFilter\n  }), []); // Use the state and functions returned from useTable to build your UI\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter\n    }\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    disableMultiSort: true\n  }, useFilters, useGlobalFilter, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect, // Here we will use a plugin to add our selection column\n  hooks => {\n    hooks.visibleColumns.push(columns => {\n      return [{\n        id: \"selection\",\n        // Make this column a groupByBoundary. This ensures that groupBy columns\n        // are placed after it\n        groupByBoundary: true,\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, getToggleAllRowsSelectedProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)\n      }, ...columns];\n    });\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_length\",\n        id: \"example_length\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1\",\n            children: \" Show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown bootstrap-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: pageSize,\n              onChange: e => {\n                setPageSize(Number(e.target.value));\n              },\n              className: \"btn dropdown-toggle btn-light\",\n              children: [5, 10, 15, 20].map((pageSize, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pageSize,\n                children: pageSize\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      className: \"display dataTable w-100\",\n      id: \"example\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map((headerGroup, i) => /*#__PURE__*/_createElement(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }\n        }), headerGroup.headers.map((column, i) => /*#__PURE__*/_createElement(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [column.canGroupBy ?\n          /*#__PURE__*/\n          // If the column can be grouped, let's add a toggle\n          _jsxDEV(\"span\", _objectSpread({}, column.getGroupByToggleProps()), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 23\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({\n            className: \"d-flex\"\n          }, column.getSortByToggleProps()), {}, {\n            children: [column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/sort_desc.png\",\n              alt: \"desc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/sort_asc.png\",\n              alt: \"asc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/sort_both.png\",\n              alt: \"both\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this)]\n          }), void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 19\n        }, this)))))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_createElement(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }\n          }), row.cells.map((cell, i) => {\n            return /*#__PURE__*/_createElement(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n              key: i,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }\n            }), cell.isGrouped ?\n            /*#__PURE__*/\n            // If it's a grouped cell, add an expander and row count\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n                children: row.isExpanded ? \"👇\" : \"👉\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 27\n              }, this), \" \", cell.render(\"Cell\", {\n                editable: false\n              }), \" (\", row.subRows.length, \")\"]\n            }, void 0, true) : cell.isAggregated ? // If the cell is aggregated, use the Aggregated\n            // renderer for cell\n            cell.render(\"Aggregated\") : cell.isPlaceholder ? null : // For cells with repeated values, render null\n            // Otherwise, just render the regular cell\n            cell.render(\"Cell\", {\n              editable: true\n            }));\n          }));\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_info\",\n        children: [\"Page \", pageIndex + 1, \" of \", pageOptions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_paginate paging_simple_numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button previous disabled c-pointer\",\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Array(pageOptions.length).fill(\"_\").map((page, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `paginate_button c-pointer ${i === pageIndex ? \"current\" : \"\"}`,\n            onClick: () => gotoPage(i),\n            children: i + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button next c-pointer\",\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nconst IndeterminateCheckbox = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    indeterminate\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"indeterminate\"]);\n\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n      type: \"checkbox\",\n      ref: resolvedRef\n    }, rest), {}, {\n      className: \"table_checkbox\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n});\n\nfunction PatientReactTable({\n  patientTable\n}) {\n  const columns = React.useMemo(() => [{\n    Header: \"Patient ID\",\n    accessor: \"id\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `#${s.value}`\n  }, {\n    Header: \"Date Check in\",\n    accessor: \"date\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Patient Name\",\n    accessor: \"name\",\n    invoiceNumber: true,\n    Cell: s => `#${s.value}` //    Aggregated: ({ value }) => `${value}`,\n\n  }, {\n    Header: \"Doctor Assgined\",\n    accessor: \"assgined\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Disease\",\n    accessor: \"disease\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => /*#__PURE__*/_jsxDEV(\"span\", {\n      class: `badge light badge-${s.value.color}`,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-circle text-danger mr-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 13\n      }, this), s.value.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Room no\",\n    accessor: \"roomNo\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Action\",\n    accessor: \"price\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => /*#__PURE__*/_jsxDEV(Dropdown, {\n      className: \"ml-auto text-right\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        as: \"a\",\n        variant: \"\",\n        className: \"btn-link i-false c-pointer\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24px\",\n          height: \"24px\",\n          viewBox: \"0 0 24 24\",\n          version: \"1.1\",\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            stroke: \"none\",\n            strokeWidth: 1,\n            fill: \"none\",\n            fillRule: \"evenodd\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: 0,\n              y: 0,\n              width: 24,\n              height: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              fill: \"#000000\",\n              cx: 5,\n              cy: 12,\n              r: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              fill: \"#000000\",\n              cx: 12,\n              cy: 12,\n              r: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              fill: \"#000000\",\n              cx: 19,\n              cy: 12,\n              r: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        alignRight: true,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: \"Accept Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: \"Reject Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }, this)\n  }], []); // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  const skipResetRef = React.useRef(false); // After data changes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n\n  React.useEffect(() => {\n    skipResetRef.current = false;\n  }, [patientTable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"example_wrapper\",\n      className: \"dataTables_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: patientTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PatientReactTable;","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/components/table/reactTable/PatientReactTable.js"],"names":["dynamic","React","Dropdown","useAsyncDebounce","useExpanded","useFilters","useGlobalFilter","useGroupBy","usePagination","useRowSelect","useSortBy","useTable","matchSorter","ssr","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","setValue","useState","onChange","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","fuzzyTextFilterFn","rows","keys","autoRemove","val","Table","columns","data","skipReset","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","autoResetPage","autoResetSelectedRows","disableMultiSort","hooks","visibleColumns","push","groupByBoundary","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","Number","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","isGrouped","getToggleRowExpandedProps","isExpanded","editable","subRows","isAggregated","isPlaceholder","Array","fill","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","PatientReactTable","patientTable","accessor","Aggregated","s","invoiceNumber","color","skipResetRef"],"mappings":"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","sourcesContent":["// A great library for fuzzy filtering/sorting items\r\n// import matchSorter from \"match-sorter\";\r\nimport dynamic from \"next/dynamic\";\r\nimport React from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport {\r\n  useAsyncDebounce,\r\n  useExpanded,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useGroupBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\r\n  ssr: false,\r\n});\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      className=\"form-control\"\r\n      placeholder=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div id=\"example_filter\" className=\"dataTables_filter\">\r\n      <label className=\"d-flex align-items-center\">\r\n        <span className=\"mr-2\">Search:</span>\r\n\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          className=\"form-control\"\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      className=\"form-control\"\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction Table({ columns, data, skipReset }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes,\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      disableMultiSort: true,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect,\r\n\r\n    // Here we will use a plugin to add our selection column\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: \"selection\",\r\n            // Make this column a groupByBoundary. This ensures that groupBy columns\r\n            // are placed after it\r\n            groupByBoundary: true,\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_length\" id=\"example_length\">\r\n          <label className=\"d-flex align-items-center\">\r\n            <span className=\"mr-1\"> Show </span>\r\n            <div className=\"dropdown bootstrap-select\">\r\n              <select\r\n                value={pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n                className=\"btn dropdown-toggle btn-light\"\r\n              >\r\n                {[5, 10, 15, 20].map((pageSize, i) => (\r\n                  <option key={pageSize} key={i} value={pageSize}>\r\n                    {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>{\" \"}\r\n            <span className=\"ml-1\">entries</span>\r\n          </label>\r\n        </div>\r\n\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"display dataTable w-100\"\r\n        id=\"example\"\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup, i) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} key={i}>\r\n              {headerGroup.headers.map((column, i) => (\r\n                <th {...column.getHeaderProps()} key={i}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}></span>\r\n                    ) : null}\r\n                    <span className=\"d-flex\" {...column.getSortByToggleProps()}>\r\n                      {column.render(\"Header\")}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <img src=\"/images/sort_desc.png\" alt=\"desc\" />\r\n                        ) : (\r\n                          <img src=\"/images/sort_asc.png\" alt=\"asc\" />\r\n                        )\r\n                      ) : (\r\n                        <img src=\"/images/sort_both.png\" alt=\"both\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  {/* Render the columns filter UI */}\r\n                  {/* <div>{column.canFilter ? column.render(\"Filter\") : null}</div> */}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} key={i}>\r\n                {row.cells.map((cell, i) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} key={i}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? \"👇\" : \"👉\"}\r\n                          </span>{\" \"}\r\n                          {cell.render(\"Cell\", { editable: false })} (\r\n                          {row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        // If the cell is aggregated, use the Aggregated\r\n                        // renderer for cell\r\n                        cell.render(\"Aggregated\")\r\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                        // Otherwise, just render the regular cell\r\n                        cell.render(\"Cell\", { editable: true })\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"d-flex d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_info\">\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </div>\r\n\r\n        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n          <div\r\n            className=\"paginate_button previous disabled c-pointer\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </div>\r\n          <span>\r\n            {Array(pageOptions.length)\r\n              .fill(\"_\")\r\n              .map((page, i) => (\r\n                <a\r\n                  className={`paginate_button c-pointer ${\r\n                    i === pageIndex ? \"current\" : \"\"\r\n                  }`}\r\n                  onClick={() => gotoPage(i)}\r\n                  key={i}\r\n                >\r\n                  {i + 1}\r\n                </a>\r\n              ))}\r\n          </span>\r\n          <div\r\n            className=\"paginate_button next c-pointer\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={resolvedRef}\r\n          {...rest}\r\n          className=\"table_checkbox\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nfunction PatientReactTable({ patientTable }) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Patient ID\",\r\n        accessor: \"id\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `#${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Date Check in\",\r\n        accessor: \"date\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Patient Name\",\r\n        accessor: \"name\",\r\n        invoiceNumber: true,\r\n        Cell: (s) => `#${s.value}`,\r\n        //    Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Doctor Assgined\",\r\n        accessor: \"assgined\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Disease\",\r\n        accessor: \"disease\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => (\r\n          <span class={`badge light badge-${s.value.color}`}>\r\n            <i className=\"fa fa-circle text-danger mr-1\"></i>\r\n            {s.value.text}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"Room no\",\r\n        accessor: \"roomNo\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Action\",\r\n        accessor: \"price\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => (\r\n          <Dropdown className=\"ml-auto text-right\">\r\n            <Dropdown.Toggle\r\n              as=\"a\"\r\n              variant=\"\"\r\n              className=\"btn-link i-false c-pointer\"\r\n            >\r\n              <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                <g stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                  <rect x={0} y={0} width={24} height={24} />\r\n                  <circle fill=\"#000000\" cx={5} cy={12} r={2} />\r\n                  <circle fill=\"#000000\" cx={12} cy={12} r={2} />\r\n                  <circle fill=\"#000000\" cx={19} cy={12} r={2} />\r\n                </g>\r\n              </svg>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu alignRight={true}>\r\n              <Dropdown.Item>Accept Patient</Dropdown.Item>\r\n              <Dropdown.Item>Reject Order</Dropdown.Item>\r\n              <Dropdown.Item>View Details</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const skipResetRef = React.useRef(false);\r\n\r\n  // After data changes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    skipResetRef.current = false;\r\n  }, [patientTable]);\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n        <Table columns={columns} data={patientTable} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientReactTable;\r\n"]},"metadata":{},"sourceType":"module"}