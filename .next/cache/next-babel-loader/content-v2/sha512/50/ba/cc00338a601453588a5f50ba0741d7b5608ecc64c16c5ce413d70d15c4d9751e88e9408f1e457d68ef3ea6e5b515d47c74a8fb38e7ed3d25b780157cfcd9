{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena\\\\package\\\\src\\\\components\\\\table\\\\reactTable\\\\FeesCollectionReactTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// A great library for fuzzy filtering/sorting items\n// import matchSorter from \"match-sorter\";\nimport dynamic from \"next/dynamic\";\nimport React from \"react\";\nimport { useAsyncDebounce, useExpanded, useFilters, useGlobalFilter, useGroupBy, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"match-sorter\")],\n    modules: [\"match-sorter\"]\n  }\n}); // Define a default UI for filtering\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    className: \"form-control\",\n    placeholder: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"example_filter\",\n    className: \"dataTables_filter\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value || \"\",\n        onChange: e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [row => row.values[id]]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = val => !val; // Be sure to pass our updateMyData and the skipReset option\n\n\nfunction Table({\n  columns,\n  data,\n  skipReset\n}) {\n  const filterTypes = React.useMemo(() => ({\n    // Add a new fuzzyTextFilterFn filter type.\n    fuzzyText: fuzzyTextFilterFn,\n    // Or, override the default text filter to use\n    // \"startWith\"\n    text: (rows, id, filterValue) => {\n      return rows.filter(row => {\n        const rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n      });\n    }\n  }), []);\n  const defaultColumn = React.useMemo(() => ({\n    // Let's set up our default Filter UI\n    Filter: DefaultColumnFilter\n  }), []); // Use the state and functions returned from useTable to build your UI\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    state: {\n      pageIndex,\n      pageSize,\n      globalFilter\n    }\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    filterTypes,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    disableMultiSort: true\n  }, useFilters, useGlobalFilter, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect // Here we will use a plugin to add our selection column\n  ); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_length\",\n        id: \"example_length\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1\",\n            children: \" Show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown bootstrap-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: pageSize,\n              onChange: e => {\n                setPageSize(Number(e.target.value));\n              },\n              className: \"btn dropdown-toggle btn-light\",\n              children: [5, 10, 15, 20].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pageSize,\n                children: pageSize\n              }, pageSize, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      className: \"display dataTable w-100\",\n      id: \"example\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [column.canGroupBy ?\n              /*#__PURE__*/\n              // If the column can be grouped, let's add a toggle\n              _jsxDEV(\"span\", _objectSpread({}, column.getGroupByToggleProps()), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, column.getSortByToggleProps()), {}, {\n                children: [column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_desc.png\",\n                  alt: \"desc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_asc.png\",\n                  alt: \"asc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_both.png\",\n                  alt: \"both\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this))\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.isGrouped ?\n                /*#__PURE__*/\n                // If it's a grouped cell, add an expander and row count\n                _jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n                    children: row.isExpanded ? \"👇\" : \"👉\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this), \" \", cell.render(\"Cell\"), \" (\", row.subRows.length, \")\"]\n                }, void 0, true) : cell.isAggregated ? cell.render(\"Aggregated\") : cell.isPlaceholder ? null : cell.render(\"Cell\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_info\",\n        children: [\"Page \", pageIndex + 1, \" of \", pageOptions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_paginate paging_simple_numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button previous disabled c-pointer\",\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Array(pageOptions.length).fill(\"_\").map((page, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n            className: `paginate_button c-pointer ${i === pageIndex ? \"current\" : \"\"}`,\n            onClick: () => gotoPage(i),\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button next c-pointer\",\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction FeesCollectionReactTable({\n  feeTable\n}) {\n  const columns = React.useMemo(() => [{\n    Header: \"Roll\",\n    accessor: \"roll\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Student Name\",\n    accessor: \"name\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Invoice number\",\n    accessor: \"invoiceNumber\",\n    invoiceNumber: true,\n    Cell: s => `#${s.value}` //    Aggregated: ({ value }) => `${value}`,\n\n  }, {\n    Header: \"Fees Type\",\n    accessor: \"feeType\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Payment Type\",\n    accessor: \"paymentType\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Status\",\n    accessor: \"status\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => /*#__PURE__*/_jsxDEV(\"span\", {\n      class: `badge light badge-${s.value.color}`,\n      children: s.value.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Date\",\n    accessor: \"date\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => `${s.value}`\n  }, {\n    Header: \"Amount\",\n    accessor: \"price\",\n    Aggregated: ({\n      value\n    }) => `${value}`,\n    Cell: s => /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: `${s.value}$`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 22\n    }, this)\n  }], []); // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  const skipResetRef = React.useRef(false); // After data changes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n\n  React.useEffect(() => {\n    skipResetRef.current = false;\n  }, [feeTable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"example_wrapper\",\n      className: \"dataTables_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: feeTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n}\n\nexport default FeesCollectionReactTable;","map":{"version":3,"sources":["D:/react-projects/uena/uena/package/src/components/table/reactTable/FeesCollectionReactTable.js"],"names":["dynamic","React","useAsyncDebounce","useExpanded","useFilters","useGlobalFilter","useGroupBy","usePagination","useRowSelect","useSortBy","useTable","matchSorter","ssr","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","setValue","useState","onChange","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","Table","columns","data","skipReset","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","autoResetPage","autoResetSelectedRows","disableMultiSort","Number","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","isGrouped","getToggleRowExpandedProps","isExpanded","subRows","isAggregated","isPlaceholder","Array","fill","i","FeesCollectionReactTable","feeTable","Header","accessor","Aggregated","Cell","s","invoiceNumber","color","skipResetRef","useRef","useEffect","current"],"mappings":"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","sourcesContent":["// A great library for fuzzy filtering/sorting items\r\n// import matchSorter from \"match-sorter\";\r\nimport dynamic from \"next/dynamic\";\r\nimport React from \"react\";\r\nimport {\r\n  useAsyncDebounce,\r\n  useExpanded,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useGroupBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\r\n  ssr: false,\r\n});\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      className=\"form-control\"\r\n      placeholder=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div id=\"example_filter\" className=\"dataTables_filter\">\r\n      <label class=\"d-flex align-items-center\">\r\n        <span className=\"mr-2\">Search:</span>\r\n\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          className=\"form-control\"\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction Table({ columns, data, skipReset }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes,\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      disableMultiSort: true,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect\r\n\r\n    // Here we will use a plugin to add our selection column\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_length\" id=\"example_length\">\r\n          <label className=\"d-flex align-items-center\">\r\n            <span className=\"mr-1\"> Show </span>\r\n            <div className=\"dropdown bootstrap-select\">\r\n              <select\r\n                value={pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n                className=\"btn dropdown-toggle btn-light\"\r\n              >\r\n                {[5, 10, 15, 20].map((pageSize) => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>{\" \"}\r\n            <span className=\"ml-1\">entries</span>\r\n          </label>\r\n        </div>\r\n\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"display dataTable w-100\"\r\n        id=\"example\"\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}></span>\r\n                    ) : null}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.render(\"Header\")}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <img src=\"/images/sort_desc.png\" alt=\"desc\" />\r\n                        ) : (\r\n                          <img src=\"/images/sort_asc.png\" alt=\"asc\" />\r\n                        )\r\n                      ) : (\r\n                        <img src=\"/images/sort_both.png\" alt=\"both\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? \"👇\" : \"👉\"}\r\n                          </span>{\" \"}\r\n                          {cell.render(\"Cell\")} ({row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        cell.render(\"Aggregated\")\r\n                      ) : cell.isPlaceholder ? null : (\r\n                        cell.render(\"Cell\")\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"d-flex d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_info\">\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </div>\r\n\r\n        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n          <div\r\n            className=\"paginate_button previous disabled c-pointer\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </div>\r\n          <span>\r\n            {Array(pageOptions.length)\r\n              .fill(\"_\")\r\n              .map((page, i) => (\r\n                <a\r\n                  className={`paginate_button c-pointer ${\r\n                    i === pageIndex ? \"current\" : \"\"\r\n                  }`}\r\n                  onClick={() => gotoPage(i)}\r\n                >\r\n                  {i + 1}\r\n                </a>\r\n              ))}\r\n          </span>\r\n          <div\r\n            className=\"paginate_button next c-pointer\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeesCollectionReactTable({ feeTable }) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Roll\",\r\n        accessor: \"roll\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Student Name\",\r\n        accessor: \"name\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Invoice number\",\r\n        accessor: \"invoiceNumber\",\r\n        invoiceNumber: true,\r\n        Cell: (s) => `#${s.value}`,\r\n        //    Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Fees Type\",\r\n        accessor: \"feeType\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Payment Type\",\r\n        accessor: \"paymentType\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"status\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => (\r\n          <span class={`badge light badge-${s.value.color}`}>\r\n            {s.value.text}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"date\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Amount\",\r\n        accessor: \"price\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => <strong>{`${s.value}$`}</strong>,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const skipResetRef = React.useRef(false);\r\n\r\n  // After data changes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    skipResetRef.current = false;\r\n  }, [feeTable]);\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n        <Table columns={columns} data={feeTable} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeesCollectionReactTable;\r\n"]},"metadata":{},"sourceType":"module"}