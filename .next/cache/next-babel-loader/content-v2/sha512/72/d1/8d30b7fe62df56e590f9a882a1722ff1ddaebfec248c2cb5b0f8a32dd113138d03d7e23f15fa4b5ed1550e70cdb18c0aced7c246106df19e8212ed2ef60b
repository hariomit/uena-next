{"ast":null,"code":"import { auth } from \"../../firebaseConfig\";\nimport { AUTH_ERROR, GET_USER } from \"./type\";\n\nvar currentUser = function currentUser(dispatch) {\n  auth.onAuthStateChanged(function (user) {\n    if (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user.providerData[0]\n      });\n    } else {\n      dispatch({\n        type: GET_USER,\n        payload: null\n      });\n      dispatch({\n        type: AUTH_ERROR,\n        payload: null\n      });\n    }\n  });\n};\n\nexport var getUser = function getUser() {\n  return function (dispatch) {\n    currentUser(dispatch);\n  };\n};\nexport var registerUser = function registerUser(userData) {\n  return function (dispatch) {\n    var email = userData.email,\n        password = userData.password,\n        username = userData.username;\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredential) {\n      auth.currentUser.updateProfile({\n        displayName: username\n      });\n      dispatch({\n        type: AUTH_ERROR,\n        payload: {\n          msg: \"Register successfully completed\",\n          auth: true\n        }\n      });\n      currentUser(dispatch);\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: {\n          msg: error.message,\n          auth: false\n        }\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    var email = userData.email,\n        password = userData.password;\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredential) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: {\n          msg: \"Login successfully completed\",\n          auth: true\n        }\n      });\n      currentUser(dispatch);\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: {\n          msg: error.message,\n          auth: false\n        }\n      });\n    });\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    auth.signOut().then(function () {\n      currentUser(dispatch);\n    })[\"catch\"](function (error) {// An error happened.\n    });\n  };\n};","map":{"version":3,"sources":["D:/react-projects/uena/uena/package/src/redux/action/auth.js"],"names":["auth","AUTH_ERROR","GET_USER","currentUser","dispatch","onAuthStateChanged","user","type","payload","providerData","getUser","registerUser","userData","email","password","username","createUserWithEmailAndPassword","then","userCredential","updateProfile","displayName","msg","error","message","loginUser","signInWithEmailAndPassword","logoutUser","signOut"],"mappings":"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","sourcesContent":["import { auth } from \"../../firebaseConfig\";\r\nimport { AUTH_ERROR, GET_USER } from \"./type\";\r\n\r\nconst currentUser = (dispatch) => {\r\n  auth.onAuthStateChanged((user) => {\r\n    if (user) {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user.providerData[0],\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: null,\r\n      });\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: null,\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const getUser = () => (dispatch) => {\r\n  currentUser(dispatch);\r\n};\r\n\r\nexport const registerUser = (userData) => (dispatch) => {\r\n  const { email, password, username } = userData;\r\n  auth\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      auth.currentUser.updateProfile({\r\n        displayName: username,\r\n      });\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: {\r\n          msg: \"Register successfully completed\",\r\n          auth: true,\r\n        },\r\n      });\r\n      currentUser(dispatch);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: { msg: error.message, auth: false },\r\n      });\r\n    });\r\n};\r\n\r\nexport const loginUser = (userData) => (dispatch) => {\r\n  const { email, password } = userData;\r\n  auth\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: {\r\n          msg: \"Login successfully completed\",\r\n          auth: true,\r\n        },\r\n      });\r\n      currentUser(dispatch);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: { msg: error.message, auth: false },\r\n      });\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  auth\r\n    .signOut()\r\n    .then(() => {\r\n      currentUser(dispatch);\r\n    })\r\n    .catch((error) => {\r\n      // An error happened.\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}