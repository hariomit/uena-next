{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NOTIFICATION, NOTIFICATION_2 } from \"../action/type\";\n\nconst headerReducer = (state = [], action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case NOTIFICATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notification: payload\n      });\n\n    case NOTIFICATION_2:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notification_2: payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default headerReducer;","map":{"version":3,"sources":["D:/react-projects/uena/uena/package/src/redux/reducer/headerReducer.js"],"names":["NOTIFICATION","NOTIFICATION_2","headerReducer","state","action","type","payload","notification","notification_2"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,gBAA7C;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKL,YAAL;AACE,6CACKG,KADL;AAEEI,QAAAA,YAAY,EAAED;AAFhB;;AAIF,SAAKL,cAAL;AACE,6CACKE,KADL;AAEEK,QAAAA,cAAc,EAAEF;AAFlB;;AAKF;AACE,aAAOH,KAAP;AAbJ;AAeD,CAjBD;;AAkBA,eAAeD,aAAf","sourcesContent":["import { NOTIFICATION, NOTIFICATION_2 } from \"../action/type\";\r\n\r\nconst headerReducer = (state = [], action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notification: payload,\r\n      };\r\n    case NOTIFICATION_2:\r\n      return {\r\n        ...state,\r\n        notification_2: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default headerReducer;\r\n"]},"metadata":{},"sourceType":"module"}