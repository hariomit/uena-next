{"ast":null,"code":"import _objectWithoutProperties from \"D:/react-projects/uena/uena/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport _defineProperty from \"D:/react-projects/uena/uena/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:/react-projects/uena/uena/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/react-projects/uena/uena/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena\\\\package\\\\src\\\\components\\\\table\\\\reactTable\\\\BasicReactTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _this3 = this,\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// A great library for fuzzy filtering/sorting items\n// import matchSorter from \"match-sorter\";\nimport dynamic from \"next/dynamic\";\nimport React from \"react\";\nimport { useAsyncDebounce, useExpanded, useFilters, useGlobalFilter, useGroupBy, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nvar matchSorter = dynamic(function () {\n  return import(\"match-sorter\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"match-sorter\")];\n    },\n    modules: [\"match-sorter\"]\n  }\n}); // Define a default UI for filtering\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  var count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    className: \"form-control\",\n    placeholder: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DefaultColumnFilter;\n\nfunction GlobalFilter(_ref2) {\n  _s();\n\n  var preGlobalFilteredRows = _ref2.preGlobalFilteredRows,\n      globalFilter = _ref2.globalFilter,\n      setGlobalFilter = _ref2.setGlobalFilter;\n  var count = preGlobalFilteredRows.length;\n\n  var _React$useState = React.useState(globalFilter),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _onChange = useAsyncDebounce(function (value) {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"example_filter\",\n    className: \"dataTables_filter\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value || \"\",\n        onChange: function onChange(e) {\n          setValue(e.target.value);\n\n          _onChange(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c2 = GlobalFilter;\n\nfunction SelectColumnFilter(_ref3) {\n  _s2();\n\n  var _this = this;\n\n  var _ref3$column = _ref3.column,\n      filterValue = _ref3$column.filterValue,\n      setFilter = _ref3$column.setFilter,\n      preFilteredRows = _ref3$column.preFilteredRows,\n      id = _ref3$column.id;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  var options = React.useMemo(function () {\n    var options = new Set();\n    preFilteredRows.forEach(function (row) {\n      options.add(row.values[id]);\n    });\n    return _toConsumableArray(options.values());\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: filterValue,\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined);\n    },\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), options.map(function (option, i) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c3 = SelectColumnFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n}; // Be sure to pass our updateMyData and the skipReset option\n\n\nfunction Table(_ref4) {\n  _s3();\n\n  var _this2 = this;\n\n  var columns = _ref4.columns,\n      data = _ref4.data,\n      skipReset = _ref4.skipReset;\n  var filterTypes = React.useMemo(function () {\n    return {\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter\n    };\n  }, []); // Use the state and functions returned from useTable to build your UI\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    filterTypes: filterTypes,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    disableMultiSort: true\n  }, useFilters, useGlobalFilter, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect, // Here we will use a plugin to add our selection column\n  function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [{\n        id: \"selection\",\n        // Make this column a groupByBoundary. This ensures that groupBy columns\n        // are placed after it\n        groupByBoundary: true,\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: function Header(_ref5) {\n          var getToggleAllRowsSelectedProps = _ref5.getToggleAllRowsSelectedProps;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, getToggleAllRowsSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, _this2);\n        },\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: function Cell(_ref6) {\n          var row = _ref6.row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, _this2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, _this2);\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      preGlobalFilteredRows = _useTable.preGlobalFilteredRows,\n      setGlobalFilter = _useTable.setGlobalFilter,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      globalFilter = _useTable$state.globalFilter; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_length\",\n        id: \"example_length\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1\",\n            children: \" Show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown bootstrap-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: pageSize,\n              onChange: function onChange(e) {\n                setPageSize(Number(e.target.value));\n              },\n              className: \"btn dropdown-toggle btn-light\",\n              children: [5, 10, 15, 20].map(function (pageSize, i) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pageSize,\n                  children: pageSize\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      className: \"display dataTable w-100\",\n      id: \"example\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup, i) {\n          return /*#__PURE__*/_createElement(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 13\n            }\n          }), headerGroup.headers.map(function (column, i) {\n            return /*#__PURE__*/_createElement(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n              key: i,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [column.canGroupBy ?\n              /*#__PURE__*/\n              // If the column can be grouped, let's add a toggle\n              _jsxDEV(\"span\", _objectSpread({}, column.getGroupByToggleProps()), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 23\n              }, _this2) : null, /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({\n                className: \"d-flex\"\n              }, column.getSortByToggleProps()), {}, {\n                children: [column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_desc.png\",\n                  alt: \"desc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 27\n                }, _this2) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_asc.png\",\n                  alt: \"asc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 27\n                }, _this2) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/sort_both.png\",\n                  alt: \"both\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, _this2)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render(\"Filter\") : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, _this2));\n          }));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_createElement(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }\n          }), row.cells.map(function (cell, i) {\n            return /*#__PURE__*/_createElement(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n              key: i,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }\n            }), cell.isGrouped ?\n            /*#__PURE__*/\n            // If it's a grouped cell, add an expander and row count\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n                children: row.isExpanded ? \"👇\" : \"👉\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 27\n              }, _this2), \" \", cell.render(\"Cell\", {\n                editable: false\n              }), \" (\", row.subRows.length, \")\"]\n            }, void 0, true) : cell.isAggregated ? // If the cell is aggregated, use the Aggregated\n            // renderer for cell\n            cell.render(\"Aggregated\") : cell.isPlaceholder ? null : // For cells with repeated values, render null\n            // Otherwise, just render the regular cell\n            cell.render(\"Cell\", {\n              editable: true\n            }));\n          }));\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_info\",\n        children: [\"Page \", pageIndex + 1, \" of \", pageOptions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_paginate paging_simple_numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button previous disabled c-pointer\",\n          onClick: function onClick() {\n            return previousPage();\n          },\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Array(pageOptions.length).fill(\"_\").map(function (page, i) {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"paginate_button c-pointer \".concat(i === pageIndex ? \"current\" : \"\"),\n              onClick: function onClick() {\n                return gotoPage(i);\n              },\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button next c-pointer\",\n          onClick: function onClick() {\n            return nextPage();\n          },\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(Table, \"bBoxG+oShWzLTASIWnMQV5v8eaQ=\", false, function () {\n  return [useTable];\n});\n\n_c4 = Table;\nvar IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_c5 = _s4(function (_ref7, ref) {\n  _s4();\n\n  var indeterminate = _ref7.indeterminate,\n      rest = _objectWithoutProperties(_ref7, [\"indeterminate\"]);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({\n      type: \"checkbox\",\n      ref: resolvedRef\n    }, rest), {}, {\n      className: \"table_checkbox\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, _this3)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c6 = IndeterminateCheckbox;\n\nfunction BasicReactTable(_ref8) {\n  _s5();\n\n  var basicTable = _ref8.basicTable;\n  var columns = React.useMemo(function () {\n    return [{\n      Header: \"Name\",\n      accessor: \"name\",\n      // Use a two-stage aggregator here to first\n      // count the total rows being aggregated,\n      // then sum any of those counts if they are\n      // aggregated further\n      aggregate: \"count\",\n      Aggregated: function Aggregated(_ref9) {\n        var value = _ref9.value;\n        return \"\".concat(value);\n      }\n    }, {\n      Header: \"Position\",\n      accessor: \"position\",\n      Filter: SelectColumnFilter,\n      filter: \"equals\",\n      Aggregated: function Aggregated(_ref10) {\n        var value = _ref10.value;\n        return \"\".concat(value);\n      }\n    }, {\n      Header: \"Office\",\n      accessor: \"office\",\n      // Aggregate the average age of visitors\n      aggregate: \"average\",\n      Aggregated: function Aggregated(_ref11) {\n        var value = _ref11.value;\n        return \"\".concat(value);\n      }\n    }, {\n      Header: \"Age\",\n      accessor: \"age\",\n      Aggregated: function Aggregated(_ref12) {\n        var value = _ref12.value;\n        return \"\".concat(value);\n      }\n    }, {\n      Header: \"Date\",\n      accessor: \"date\",\n      Aggregated: function Aggregated(_ref13) {\n        var value = _ref13.value;\n        return \"\".concat(value);\n      }\n    }, {\n      Header: \"Salary\",\n      accessor: \"salary\",\n      Aggregated: function Aggregated(_ref14) {\n        var value = _ref14.value;\n        return \"\".concat(value);\n      }\n    }];\n  }, []); // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  var skipResetRef = React.useRef(false); // After data changes, we turn the flag back off\n  // so that if data actually changes when we're not\n  // editing it, the page is reset\n\n  React.useEffect(function () {\n    skipResetRef.current = false;\n  }, [basicTable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"example_wrapper\",\n      className: \"dataTables_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: basicTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 431,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(BasicReactTable, \"aIkASF7S84xVrH71hsbJRa+K8mA=\");\n\n_c7 = BasicReactTable;\nexport default BasicReactTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"GlobalFilter\");\n$RefreshReg$(_c3, \"SelectColumnFilter\");\n$RefreshReg$(_c4, \"Table\");\n$RefreshReg$(_c5, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c6, \"IndeterminateCheckbox\");\n$RefreshReg$(_c7, \"BasicReactTable\");","map":{"version":3,"sources":["D:/react-projects/uena/uena/package/src/components/table/reactTable/BasicReactTable.js"],"names":["dynamic","React","useAsyncDebounce","useExpanded","useFilters","useGlobalFilter","useGroupBy","usePagination","useRowSelect","useSortBy","useTable","matchSorter","ssr","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","useState","setValue","onChange","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","fuzzyTextFilterFn","rows","keys","autoRemove","val","Table","columns","data","skipReset","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","autoResetPage","autoResetSelectedRows","disableMultiSort","hooks","visibleColumns","push","groupByBoundary","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","Number","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","isGrouped","getToggleRowExpandedProps","isExpanded","editable","subRows","isAggregated","isPlaceholder","Array","fill","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","BasicReactTable","basicTable","accessor","aggregate","Aggregated","skipResetRef"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,aANF,EAOEC,YAPF,EAQEC,SARF,EASEC,QATF,QAUO,aAVP;AAWA,IAAMC,WAAW,GAAGX,OAAO,CAAC;AAAA,SAAM,OAAO,cAAP,CAAN;AAAA,CAAD,EAA+B;AACxDY,EAAAA,GAAG,EAAE,KADmD;AAAA;AAAA;AAAA,kCAAjB,cAAiB;AAAA;AAAA,cAAjB,cAAiB;AAAA;AAAA,CAA/B,CAA3B,C,CAIA;;AACA,SAASC,mBAAT,OAEG;AAAA,yBADDC,MACC;AAAA,MADSC,WACT,eADSA,WACT;AAAA,MADsBC,eACtB,eADsBA,eACtB;AAAA,MADuCC,SACvC,eADuCA,SACvC;AACD,MAAMC,KAAK,GAAGF,eAAe,CAACG,MAA9B;AAEA,sBACE;AACE,IAAA,KAAK,EAAEJ,WAAW,IAAI,EADxB;AAEE,IAAA,QAAQ,EAAE,kBAACK,CAAD,EAAO;AACfH,MAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBC,SAAnB,CAAT,CADe,CACyB;AACzC,KAJH;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAfQV,mB;;AAiBT,SAASW,YAAT,QAIG;AAAA;;AAAA,MAHDC,qBAGC,SAHDA,qBAGC;AAAA,MAFDC,YAEC,SAFDA,YAEC;AAAA,MADDC,eACC,SADDA,eACC;AACD,MAAMT,KAAK,GAAGO,qBAAqB,CAACN,MAApC;;AADC,wBAEyBlB,KAAK,CAAC2B,QAAN,CAAeF,YAAf,CAFzB;AAAA;AAAA,MAEMJ,KAFN;AAAA,MAEaO,QAFb;;AAGD,MAAMC,SAAQ,GAAG5B,gBAAgB,CAAC,UAACoB,KAAD,EAAW;AAC3CK,IAAAA,eAAe,CAACL,KAAK,IAAIC,SAAV,CAAf;AACD,GAFgC,EAE9B,GAF8B,CAAjC;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,SAAS,EAAC,mBAAnC;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,2BAAjB;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,KAAK,EAAED,KAAK,IAAI,EADlB;AAEE,QAAA,QAAQ,EAAE,kBAACF,CAAD,EAAO;AACfS,UAAAA,QAAQ,CAACT,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACAQ,UAAAA,SAAQ,CAACV,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,SALH;AAME,QAAA,SAAS,EAAC,cANZ;AAOE,QAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,C,CAED;AACA;;;GA/BSE,Y;UAOUtB,gB;;;MAPVsB,Y;;AAgCT,SAASO,kBAAT,QAEG;AAAA;;AAAA;;AAAA,2BADDjB,MACC;AAAA,MADSC,WACT,gBADSA,WACT;AAAA,MADsBE,SACtB,gBADsBA,SACtB;AAAA,MADiCD,eACjC,gBADiCA,eACjC;AAAA,MADkDgB,EAClD,gBADkDA,EAClD;AACD;AACA;AACA,MAAMC,OAAO,GAAGhC,KAAK,CAACiC,OAAN,CAAc,YAAM;AAClC,QAAMD,OAAO,GAAG,IAAIE,GAAJ,EAAhB;AACAnB,IAAAA,eAAe,CAACoB,OAAhB,CAAwB,UAACC,GAAD,EAAS;AAC/BJ,MAAAA,OAAO,CAACK,GAAR,CAAYD,GAAG,CAACE,MAAJ,CAAWP,EAAX,CAAZ;AACD,KAFD;AAGA,8BAAWC,OAAO,CAACM,MAAR,EAAX;AACD,GANe,EAMb,CAACP,EAAD,EAAKhB,eAAL,CANa,CAAhB,CAHC,CAWD;;AACA,sBACE;AACE,IAAA,KAAK,EAAED,WADT;AAEE,IAAA,QAAQ,EAAE,kBAACK,CAAD,EAAO;AACfH,MAAAA,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBC,SAAnB,CAAT;AACD,KAJH;AAKE,IAAA,SAAS,EAAC,cALZ;AAAA,4BAOE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGU,OAAO,CAACO,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,0BACX;AAAgB,QAAA,KAAK,EAAED,MAAvB;AAAA,kBACGA;AADH,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,KAAZ,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;IA9BQX,kB;;MAAAA,kB;;AAgCT,SAASY,iBAAT,CAA2BC,IAA3B,EAAiCZ,EAAjC,EAAqCjB,WAArC,EAAkD;AAChD,SAAOJ,WAAW,CAACiC,IAAD,EAAO7B,WAAP,EAAoB;AAAE8B,IAAAA,IAAI,EAAE,CAAC,UAACR,GAAD;AAAA,aAASA,GAAG,CAACE,MAAJ,CAAWP,EAAX,CAAT;AAAA,KAAD;AAAR,GAApB,CAAlB;AACD,C,CAED;;;AACAW,iBAAiB,CAACG,UAAlB,GAA+B,UAACC,GAAD;AAAA,SAAS,CAACA,GAAV;AAAA,CAA/B,C,CAEA;;;AACA,SAASC,KAAT,QAA6C;AAAA;;AAAA;;AAAA,MAA5BC,OAA4B,SAA5BA,OAA4B;AAAA,MAAnBC,IAAmB,SAAnBA,IAAmB;AAAA,MAAbC,SAAa,SAAbA,SAAa;AAC3C,MAAMC,WAAW,GAAGnD,KAAK,CAACiC,OAAN,CAClB;AAAA,WAAO;AACL;AACAmB,MAAAA,SAAS,EAAEV,iBAFN;AAGL;AACA;AACAW,MAAAA,IAAI,EAAE,cAACV,IAAD,EAAOZ,EAAP,EAAWjB,WAAX,EAA2B;AAC/B,eAAO6B,IAAI,CAACW,MAAL,CAAY,UAAClB,GAAD,EAAS;AAC1B,cAAMmB,QAAQ,GAAGnB,GAAG,CAACE,MAAJ,CAAWP,EAAX,CAAjB;AACA,iBAAOwB,QAAQ,KAAKjC,SAAb,GACHkC,MAAM,CAACD,QAAD,CAAN,CACGE,WADH,GAEGC,UAFH,CAEcF,MAAM,CAAC1C,WAAD,CAAN,CAAoB2C,WAApB,EAFd,CADG,GAIH,IAJJ;AAKD,SAPM,CAAP;AAQD;AAdI,KAAP;AAAA,GADkB,EAiBlB,EAjBkB,CAApB;AAoBA,MAAME,aAAa,GAAG3D,KAAK,CAACiC,OAAN,CACpB;AAAA,WAAO;AACL;AACA2B,MAAAA,MAAM,EAAEhD;AAFH,KAAP;AAAA,GADoB,EAKpB,EALoB,CAAtB,CArB2C,CA6B3C;;AA7B2C,kBAkDvCH,QAAQ,CACV;AACEuC,IAAAA,OAAO,EAAPA,OADF;AAEEC,IAAAA,IAAI,EAAJA,IAFF;AAGEU,IAAAA,aAAa,EAAbA,aAHF;AAIER,IAAAA,WAAW,EAAXA,WAJF;AAKEU,IAAAA,aAAa,EAAE,CAACX,SALlB;AAMEY,IAAAA,qBAAqB,EAAE,CAACZ,SAN1B;AAOEa,IAAAA,gBAAgB,EAAE;AAPpB,GADU,EAUV5D,UAVU,EAWVC,eAXU,EAYVC,UAZU,EAaVG,SAbU,EAcVN,WAdU,EAeVI,aAfU,EAgBVC,YAhBU,EAkBV;AACA,YAACyD,KAAD,EAAW;AACTA,IAAAA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0B,UAAClB,OAAD,EAAa;AACrC,cACE;AACEjB,QAAAA,EAAE,EAAE,WADN;AAEE;AACA;AACAoC,QAAAA,eAAe,EAAE,IAJnB;AAKE;AACA;AACAC,QAAAA,MAAM,EAAE;AAAA,cAAGC,6BAAH,SAAGA,6BAAH;AAAA,8BACN;AAAA,mCACE,QAAC,qBAAD,oBAA2BA,6BAA6B,EAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADM;AAAA,SAPV;AAYE;AACA;AACAC,QAAAA,IAAI,EAAE;AAAA,cAAGlC,GAAH,SAAGA,GAAH;AAAA,8BACJ;AAAA,mCACE,QAAC,qBAAD,oBAA2BA,GAAG,CAACmC,yBAAJ,EAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADI;AAAA;AAdR,OADF,4BAqBKvB,OArBL;AAuBD,KAxBD;AAyBD,GA7CS,CAlD+B;AAAA,MA+BzCwB,aA/ByC,aA+BzCA,aA/ByC;AAAA,MAgCzCC,iBAhCyC,aAgCzCA,iBAhCyC;AAAA,MAiCzCC,YAjCyC,aAiCzCA,YAjCyC;AAAA,MAkCzCC,UAlCyC,aAkCzCA,UAlCyC;AAAA,MAmCzCC,IAnCyC,aAmCzCA,IAnCyC;AAAA,MAuCzCC,eAvCyC,aAuCzCA,eAvCyC;AAAA,MAwCzCC,WAxCyC,aAwCzCA,WAxCyC;AAAA,MAyCzCC,WAzCyC,aAyCzCA,WAzCyC;AAAA,MA0CzCC,SA1CyC,aA0CzCA,SA1CyC;AAAA,MA2CzCC,QA3CyC,aA2CzCA,QA3CyC;AAAA,MA4CzCC,QA5CyC,aA4CzCA,QA5CyC;AAAA,MA6CzCC,YA7CyC,aA6CzCA,YA7CyC;AAAA,MA8CzCC,WA9CyC,aA8CzCA,WA9CyC;AAAA,MA+CzC5D,qBA/CyC,aA+CzCA,qBA/CyC;AAAA,MAgDzCE,eAhDyC,aAgDzCA,eAhDyC;AAAA,kCAiDzC2D,KAjDyC;AAAA,MAiDhCC,SAjDgC,mBAiDhCA,SAjDgC;AAAA,MAiDrBC,QAjDqB,mBAiDrBA,QAjDqB;AAAA,MAiDX9D,YAjDW,mBAiDXA,YAjDW,EAkG3C;;;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,EAAE,EAAC,gBAAtC;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,2BAAjB;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AACE,cAAA,KAAK,EAAE8D,QADT;AAEE,cAAA,QAAQ,EAAE,kBAACpE,CAAD,EAAO;AACfiE,gBAAAA,WAAW,CAACI,MAAM,CAACrE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CAAX;AACD,eAJH;AAKE,cAAA,SAAS,EAAC,+BALZ;AAAA,wBAOG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgBkB,GAAhB,CAAoB,UAACgD,QAAD,EAAW9C,CAAX;AAAA,oCACnB;AAA+B,kBAAA,KAAK,EAAE8C,QAAtC;AAAA,4BACGA;AADH,mBAA4B9C,CAA5B;AAAA;AAAA;AAAA;AAAA,0BADmB;AAAA,eAApB;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,EAgBS,GAhBT,eAiBE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE,QAAC,YAAD;AACE,QAAA,qBAAqB,EAAEjB,qBADzB;AAEE,QAAA,YAAY,EAAEC,YAFhB;AAGE,QAAA,eAAe,EAAEC;AAHnB;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE,iDACM8C,aAAa,EADnB;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAGE,MAAA,EAAE,EAAC,SAHL;AAAA,8BAKE;AAAA,kBACGE,YAAY,CAACnC,GAAb,CAAiB,UAACkD,WAAD,EAAchD,CAAd;AAAA,8BAChB,qDAAQgD,WAAW,CAACC,mBAAZ,EAAR;AAA2C,YAAA,GAAG,EAAEjD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGgD,WAAW,CAACE,OAAZ,CAAoBpD,GAApB,CAAwB,UAAC1B,MAAD,EAAS4B,CAAT;AAAA,gCACvB,qDAAQ5B,MAAM,CAAC+E,cAAP,EAAR;AAAiC,cAAA,GAAG,EAAEnD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACE;AAAA,yBACG5B,MAAM,CAACgF,UAAP;AAAA;AACC;AACA,gDAAUhF,MAAM,CAACiF,qBAAP,EAAV;AAAA;AAAA;AAAA;AAAA,wBAFD,GAGG,IAJN,eAKE;AAAM,gBAAA,SAAS,EAAC;AAAhB,iBAA6BjF,MAAM,CAACkF,oBAAP,EAA7B;AAAA,2BACGlF,MAAM,CAACmF,MAAP,CAAc,QAAd,CADH,EAGGnF,MAAM,CAACoF,QAAP,GACCpF,MAAM,CAACqF,YAAP,gBACE;AAAK,kBAAA,GAAG,EAAC,uBAAT;AAAiC,kBAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,0BADF,gBAGE;AAAK,kBAAA,GAAG,EAAC,sBAAT;AAAgC,kBAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,0BAJH,gBAOC;AAAK,kBAAA,GAAG,EAAC,uBAAT;AAAiC,kBAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,0BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAqBE;AAAA,wBAAMrF,MAAM,CAACsF,SAAP,GAAmBtF,MAAM,CAACmF,MAAP,CAAc,QAAd,CAAnB,GAA6C;AAAnD;AAAA;AAAA;AAAA;AAAA,sBArBF,CADuB;AAAA,WAAxB,CADH,CADgB;AAAA,SAAjB;AADH;AAAA;AAAA;AAAA;AAAA,cALF,eAoCE,iDAAWvB,iBAAiB,EAA5B;AAAA,kBACGG,IAAI,CAACrC,GAAL,CAAS,UAACH,GAAD,EAAMK,CAAN,EAAY;AACpBkC,UAAAA,UAAU,CAACvC,GAAD,CAAV;AACA,8BACE,qDAAQA,GAAG,CAACgE,WAAJ,EAAR;AAA2B,YAAA,GAAG,EAAE3D,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGL,GAAG,CAACiE,KAAJ,CAAU9D,GAAV,CAAc,UAAC+D,IAAD,EAAO7D,CAAP,EAAa;AAC1B,gCACE,qDAAQ6D,IAAI,CAACC,YAAL,EAAR;AAA6B,cAAA,GAAG,EAAE9D,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACG6D,IAAI,CAACE,SAAL;AAAA;AACC;AACA;AAAA,sCACE,gDAAUpE,GAAG,CAACqE,yBAAJ,EAAV;AAAA,0BACGrE,GAAG,CAACsE,UAAJ,GAAiB,IAAjB,GAAwB;AAD3B;AAAA;AAAA;AAAA;AAAA,wBADF,EAGU,GAHV,EAIGJ,IAAI,CAACN,MAAL,CAAY,MAAZ,EAAoB;AAAEW,gBAAAA,QAAQ,EAAE;AAAZ,eAApB,CAJH,QAKGvE,GAAG,CAACwE,OAAJ,CAAY1F,MALf;AAAA,4BAFD,GASGoF,IAAI,CAACO,YAAL,GACF;AACA;AACAP,YAAAA,IAAI,CAACN,MAAL,CAAY,YAAZ,CAHE,GAIAM,IAAI,CAACQ,aAAL,GAAqB,IAArB,GAA8B;AAChC;AACAR,YAAAA,IAAI,CAACN,MAAL,CAAY,MAAZ,EAAoB;AAAEW,cAAAA,QAAQ,EAAE;AAAZ,aAApB,CAhBJ,CADF;AAqBD,WAtBA,CADH,CADF;AA2BD,SA7BA;AADH;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,eAoGE;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,4BACQrB,SAAS,GAAG,CADpB,UAC2BP,WAAW,CAAC7D,MADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,6CADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMiE,YAAY,EAAlB;AAAA,WAFX;AAGE,UAAA,QAAQ,EAAE,CAACN,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBACGkC,KAAK,CAAChC,WAAW,CAAC7D,MAAb,CAAL,CACE8F,IADF,CACO,GADP,EAEEzE,GAFF,CAEM,UAACqC,IAAD,EAAOnC,CAAP;AAAA,gCACH;AACE,cAAA,SAAS,sCACPA,CAAC,KAAK6C,SAAN,GAAkB,SAAlB,GAA8B,EADvB,CADX;AAIE,cAAA,OAAO,EAAE;AAAA,uBAAML,QAAQ,CAACxC,CAAD,CAAd;AAAA,eAJX;AAAA,wBAOGA,CAAC,GAAG;AAPP,eAKOA,CALP;AAAA;AAAA;AAAA;AAAA,sBADG;AAAA,WAFN;AADH;AAAA;AAAA;AAAA;AAAA,gBARF,eAuBE;AACE,UAAA,SAAS,EAAC,gCADZ;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMyC,QAAQ,EAAd;AAAA,WAFX;AAGE,UAAA,QAAQ,EAAE,CAACJ,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YApGF;AAAA,kBADF;AA4ID;;IA/OQ/B,K;UAkDHtC,Q;;;MAlDGsC,K;AAiPT,IAAMkE,qBAAqB,gBAAGjH,KAAK,CAACkH,UAAN,WAC5B,iBAA6BC,GAA7B,EAAqC;AAAA;;AAAA,MAAlCC,aAAkC,SAAlCA,aAAkC;AAAA,MAAhBC,IAAgB;;AACnC,MAAMC,UAAU,GAAGtH,KAAK,CAACuH,MAAN,EAAnB;AACA,MAAMC,WAAW,GAAGL,GAAG,IAAIG,UAA3B;AAEAtH,EAAAA,KAAK,CAACyH,SAAN,CAAgB,YAAM;AACpBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBN,aAApB,GAAoCA,aAApC;AACD,GAFD,EAEG,CAACI,WAAD,EAAcJ,aAAd,CAFH;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,GAAG,EAAEI;AAFP,OAGMH,IAHN;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAnB2B,kCAA9B;MAAMJ,qB;;AAsBN,SAASU,eAAT,QAAyC;AAAA;;AAAA,MAAdC,UAAc,SAAdA,UAAc;AACvC,MAAM5E,OAAO,GAAGhD,KAAK,CAACiC,OAAN,CACd;AAAA,WAAM,CACJ;AACEmC,MAAAA,MAAM,EAAE,MADV;AAEEyD,MAAAA,QAAQ,EAAE,MAFZ;AAGE;AACA;AACA;AACA;AACAC,MAAAA,SAAS,EAAE,OAPb;AAQEC,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,SAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AARd,KADI,EAWJ;AACE+C,MAAAA,MAAM,EAAE,UADV;AAEEyD,MAAAA,QAAQ,EAAE,UAFZ;AAGEjE,MAAAA,MAAM,EAAE9B,kBAHV;AAIEwB,MAAAA,MAAM,EAAE,QAJV;AAKEyE,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,UAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AALd,KAXI,EAkBJ;AACE+C,MAAAA,MAAM,EAAE,QADV;AAEEyD,MAAAA,QAAQ,EAAE,QAFZ;AAGE;AACAC,MAAAA,SAAS,EAAE,SAJb;AAKEC,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,UAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AALd,KAlBI,EAyBJ;AACE+C,MAAAA,MAAM,EAAE,KADV;AAEEyD,MAAAA,QAAQ,EAAE,KAFZ;AAGEE,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,UAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AAHd,KAzBI,EA8BJ;AACE+C,MAAAA,MAAM,EAAE,MADV;AAEEyD,MAAAA,QAAQ,EAAE,MAFZ;AAGEE,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,UAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AAHd,KA9BI,EAmCJ;AACE+C,MAAAA,MAAM,EAAE,QADV;AAEEyD,MAAAA,QAAQ,EAAE,QAFZ;AAGEE,MAAAA,UAAU,EAAE;AAAA,YAAG1G,KAAH,UAAGA,KAAH;AAAA,yBAAkBA,KAAlB;AAAA;AAHd,KAnCI,CAAN;AAAA,GADc,EA0Cd,EA1Cc,CAAhB,CADuC,CA8CvC;AACA;;AACA,MAAM2G,YAAY,GAAGhI,KAAK,CAACuH,MAAN,CAAa,KAAb,CAArB,CAhDuC,CAkDvC;AACA;AACA;;AACAvH,EAAAA,KAAK,CAACyH,SAAN,CAAgB,YAAM;AACpBO,IAAAA,YAAY,CAACN,OAAb,GAAuB,KAAvB;AACD,GAFD,EAEG,CAACE,UAAD,CAFH;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAA0B,MAAA,SAAS,EAAC,oBAApC;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE5E,OAAhB;AAAyB,QAAA,IAAI,EAAE4E;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAhEQD,e;;MAAAA,e;AAkET,eAAeA,eAAf","sourcesContent":["// A great library for fuzzy filtering/sorting items\r\n// import matchSorter from \"match-sorter\";\r\nimport dynamic from \"next/dynamic\";\r\nimport React from \"react\";\r\nimport {\r\n  useAsyncDebounce,\r\n  useExpanded,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useGroupBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\r\n  ssr: false,\r\n});\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      className=\"form-control\"\r\n      placeholder=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div id=\"example_filter\" className=\"dataTables_filter\">\r\n      <label className=\"d-flex align-items-center\">\r\n        <span className=\"mr-2\">Search:</span>\r\n\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          className=\"form-control\"\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      className=\"form-control\"\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction Table({ columns, data, skipReset }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes,\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      disableMultiSort: true,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect,\r\n\r\n    // Here we will use a plugin to add our selection column\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: \"selection\",\r\n            // Make this column a groupByBoundary. This ensures that groupBy columns\r\n            // are placed after it\r\n            groupByBoundary: true,\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    }\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_length\" id=\"example_length\">\r\n          <label className=\"d-flex align-items-center\">\r\n            <span className=\"mr-1\"> Show </span>\r\n            <div className=\"dropdown bootstrap-select\">\r\n              <select\r\n                value={pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n                className=\"btn dropdown-toggle btn-light\"\r\n              >\r\n                {[5, 10, 15, 20].map((pageSize, i) => (\r\n                  <option key={pageSize} key={i} value={pageSize}>\r\n                    {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>{\" \"}\r\n            <span className=\"ml-1\">entries</span>\r\n          </label>\r\n        </div>\r\n\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"display dataTable w-100\"\r\n        id=\"example\"\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup, i) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()} key={i}>\r\n              {headerGroup.headers.map((column, i) => (\r\n                <th {...column.getHeaderProps()} key={i}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}></span>\r\n                    ) : null}\r\n                    <span className=\"d-flex\" {...column.getSortByToggleProps()}>\r\n                      {column.render(\"Header\")}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <img src=\"/images/sort_desc.png\" alt=\"desc\" />\r\n                        ) : (\r\n                          <img src=\"/images/sort_asc.png\" alt=\"asc\" />\r\n                        )\r\n                      ) : (\r\n                        <img src=\"/images/sort_both.png\" alt=\"both\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                  {/* Render the columns filter UI */}\r\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} key={i}>\r\n                {row.cells.map((cell, i) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()} key={i}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? \"👇\" : \"👉\"}\r\n                          </span>{\" \"}\r\n                          {cell.render(\"Cell\", { editable: false })} (\r\n                          {row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        // If the cell is aggregated, use the Aggregated\r\n                        // renderer for cell\r\n                        cell.render(\"Aggregated\")\r\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                        // Otherwise, just render the regular cell\r\n                        cell.render(\"Cell\", { editable: true })\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"d-flex d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_info\">\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </div>\r\n\r\n        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n          <div\r\n            className=\"paginate_button previous disabled c-pointer\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </div>\r\n          <span>\r\n            {Array(pageOptions.length)\r\n              .fill(\"_\")\r\n              .map((page, i) => (\r\n                <a\r\n                  className={`paginate_button c-pointer ${\r\n                    i === pageIndex ? \"current\" : \"\"\r\n                  }`}\r\n                  onClick={() => gotoPage(i)}\r\n                  key={i}\r\n                >\r\n                  {i + 1}\r\n                </a>\r\n              ))}\r\n          </span>\r\n          <div\r\n            className=\"paginate_button next c-pointer\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={resolvedRef}\r\n          {...rest}\r\n          className=\"table_checkbox\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nfunction BasicReactTable({ basicTable }) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n        // Use a two-stage aggregator here to first\r\n        // count the total rows being aggregated,\r\n        // then sum any of those counts if they are\r\n        // aggregated further\r\n        aggregate: \"count\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Position\",\r\n        accessor: \"position\",\r\n        Filter: SelectColumnFilter,\r\n        filter: \"equals\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Office\",\r\n        accessor: \"office\",\r\n        // Aggregate the average age of visitors\r\n        aggregate: \"average\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Age\",\r\n        accessor: \"age\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Date\",\r\n        accessor: \"date\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n      {\r\n        Header: \"Salary\",\r\n        accessor: \"salary\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const skipResetRef = React.useRef(false);\r\n\r\n  // After data changes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    skipResetRef.current = false;\r\n  }, [basicTable]);\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n        <Table columns={columns} data={basicTable} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BasicReactTable;\r\n"]},"metadata":{},"sourceType":"module"}