{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena-final\\\\package\\\\src\\\\components\\\\table\\\\reactTable\\\\ProfileReactTable.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// A great library for fuzzy filtering/sorting items\n// import matchSorter from \"match-sorter\";\nimport dynamic from \"next/dynamic\";\nimport React from \"react\";\nimport { useAsyncDebounce, useExpanded, useFilters, useGlobalFilter, useGroupBy, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nvar matchSorter = dynamic(function () {\n  return import(\"match-sorter\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"match-sorter\")];\n    },\n    modules: [\"match-sorter\"]\n  }\n}); // Define a default UI for filtering\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  var count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || \"\",\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    className: \"form-control\",\n    placeholder: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DefaultColumnFilter;\n\nvar EditableCell = function EditableCell(_ref2) {\n  _s();\n\n  var initialValue = _ref2.value,\n      index = _ref2.row.index,\n      id = _ref2.column.id,\n      updateMyData = _ref2.updateMyData;\n\n  // We need to keep and update the state of the cell normally\n  var _React$useState = React.useState(initialValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n  }; // We'll only update the external data when the input is blurred\n\n\n  var onBlur = function onBlur() {\n    updateMyData(index, id, value);\n  }; // If the initialValue is changed external, sync it up with our state\n\n\n  React.useEffect(function () {\n    setValue(initialValue);\n  }, [initialValue]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(EditableCell, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n\n_c2 = EditableCell;\nvar defaultColumn = {\n  Cell: EditableCell\n};\n\nfunction GlobalFilter(_ref3) {\n  _s2();\n\n  var preGlobalFilteredRows = _ref3.preGlobalFilteredRows,\n      globalFilter = _ref3.globalFilter,\n      setGlobalFilter = _ref3.setGlobalFilter;\n  var count = preGlobalFilteredRows.length;\n\n  var _React$useState3 = React.useState(globalFilter),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var _onChange = useAsyncDebounce(function (value) {\n    setGlobalFilter(value || undefined);\n  }, 200);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"example_filter\",\n    className: \"dataTables_filter\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      \"class\": \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mr-2\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value || \"\",\n        onChange: function onChange(e) {\n          setValue(e.target.value);\n\n          _onChange(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c3 = GlobalFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n} // Let the table remove the filter if the string is empty\n\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n}; // Be sure to pass our updateMyData and the skipReset option\n\n\nfunction Table(_ref4) {\n  _s3();\n\n  var _this2 = this;\n\n  var columns = _ref4.columns,\n      data = _ref4.data,\n      skipReset = _ref4.skipReset,\n      updateMyData = _ref4.updateMyData;\n  var filterTypes = React.useMemo(function () {\n    return {\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter\n    };\n  }, []); // Use the state and functions returned from useTable to build your UI\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    filterTypes: filterTypes,\n    autoResetPage: !skipReset,\n    autoResetSelectedRows: !skipReset,\n    disableMultiSort: true,\n    updateMyData: updateMyData\n  }, useFilters, useGlobalFilter, useGroupBy, useSortBy, useExpanded, usePagination, useRowSelect // Here we will use a plugin to add our selection column\n  ),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      preGlobalFilteredRows = _useTable.preGlobalFilteredRows,\n      setGlobalFilter = _useTable.setGlobalFilter,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize,\n      globalFilter = _useTable$state.globalFilter; // Render the UI for your table\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_length\",\n        id: \"example_length\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-1\",\n            children: \" Show \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown bootstrap-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: pageSize,\n              onChange: function onChange(e) {\n                setPageSize(Number(e.target.value));\n              },\n              className: \"btn dropdown-toggle btn-light\",\n              children: [5, 10, 15, 20].map(function (pageSize) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: pageSize,\n                  children: pageSize\n                }, pageSize, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-1\",\n            children: \"entries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      className: \"display dataTable w-100\",\n      id: \"example\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [column.canGroupBy ?\n                  /*#__PURE__*/\n                  // If the column can be grouped, let's add a toggle\n                  _jsxDEV(\"span\", _objectSpread({}, column.getGroupByToggleProps()), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, _this2) : null, /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, column.getSortByToggleProps()), {}, {\n                    children: [column.render(\"Header\"), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/images/sort_desc.png\",\n                      alt: \"desc\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 27\n                    }, _this2) : /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/images/sort_asc.png\",\n                      alt: \"asc\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, _this2) : /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"/images/sort_both.png\",\n                      alt: \"both\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, _this2)]\n                  }), void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, _this2)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: page.map(function (row) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.isGrouped ?\n                /*#__PURE__*/\n                // If it's a grouped cell, add an expander and row count\n                _jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps()), {}, {\n                    children: row.isExpanded ? \"👇\" : \"👉\"\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 27\n                  }, _this2), \" \", cell.render(\"Cell\"), \" (\", row.subRows.length, \")\"]\n                }, void 0, true) : cell.isAggregated ? cell.render(\"Aggregated\") : cell.isPlaceholder ? null : cell.render(\"Cell\")\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, _this2);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, _this2);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_info\",\n        children: [\"Page \", pageIndex + 1, \" of \", pageOptions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dataTables_paginate paging_simple_numbers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button previous disabled c-pointer\",\n          onClick: function onClick() {\n            return previousPage();\n          },\n          disabled: !canPreviousPage,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Array(pageOptions.length).fill(\"_\").map(function (page, i) {\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"paginate_button c-pointer \".concat(i === pageIndex ? \"current\" : \"\"),\n              onClick: function onClick() {\n                return gotoPage(i);\n              },\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginate_button next c-pointer\",\n          onClick: function onClick() {\n            return nextPage();\n          },\n          disabled: !canNextPage,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(Table, \"bBoxG+oShWzLTASIWnMQV5v8eaQ=\", false, function () {\n  return [useTable];\n});\n\n_c4 = Table;\n\nfunction FeesCollectionReactTable(_ref5) {\n  _s4();\n\n  var _this3 = this;\n\n  var profileTable = _ref5.profileTable;\n  var columns = React.useMemo(function () {\n    return [{\n      Header: \"\",\n      accessor: \"img\",\n      Aggregated: function Aggregated(_ref6) {\n        var value = _ref6.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: s.value,\n          className: \"rounded-circle\",\n          width: \"35\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, _this3);\n      }\n    }, {\n      Header: \"Name\",\n      accessor: \"name\",\n      Aggregated: function Aggregated(_ref7) {\n        var value = _ref7.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return \"\".concat(s.value);\n      }\n    }, {\n      Header: \"Department\",\n      accessor: \"department\",\n      Aggregated: function Aggregated(_ref8) {\n        var value = _ref8.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return \"\".concat(s.value);\n      }\n    }, {\n      Header: \"Gender\",\n      accessor: \"gender\",\n      Aggregated: function Aggregated(_ref9) {\n        var value = _ref9.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return \"\".concat(s.value);\n      }\n    }, {\n      Header: \"Education\",\n      accessor: \"education\",\n      Aggregated: function Aggregated(_ref10) {\n        var value = _ref10.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return \"\".concat(s.value);\n      }\n    }, {\n      Header: \"Mobile\",\n      accessor: \"mobile\",\n      Aggregated: function Aggregated(_ref11) {\n        var value = _ref11.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\".concat(s.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 22\n        }, _this3);\n      }\n    }, {\n      Header: \"Email\",\n      accessor: \"email\",\n      Aggregated: function Aggregated(_ref12) {\n        var value = _ref12.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\".concat(s.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 22\n        }, _this3);\n      }\n    }, {\n      Header: \"Joining Date\",\n      accessor: \"date\",\n      Aggregated: function Aggregated(_ref13) {\n        var value = _ref13.value;\n        return \"\".concat(value);\n      },\n      Cell: function Cell(s) {\n        return \"\".concat(s.value);\n      }\n    }];\n  }, []); // We need to keep the table from resetting the pageIndex when we\n  // Update data. So we can keep track of that flag with a ref.\n\n  var skipResetRef = React.useRef(false);\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      skipPageReset = _React$useState6[0],\n      setSkipPageReset = _React$useState6[1];\n\n  var _React$useState7 = React.useState(function () {\n    return profileTable;\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      data = _React$useState8[0],\n      setData = _React$useState8[1];\n\n  var updateMyData = function updateMyData(rowIndex, columnId, value) {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData(function (old) {\n      return old.map(function (row, index) {\n        if (index === rowIndex) {\n          return _objectSpread(_objectSpread({}, old[rowIndex]), {}, _defineProperty({}, columnId, value));\n        }\n\n        return row;\n      });\n    });\n  };\n\n  React.useEffect(function () {\n    skipResetRef.current = false;\n  }, [profileTable]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"example_wrapper\",\n      className: \"dataTables_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: data,\n        updateMyData: updateMyData,\n        skipPageReset: skipPageReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(FeesCollectionReactTable, \"Wu6RqZBdTrFZsSLHlTQljaTxylY=\");\n\n_c5 = FeesCollectionReactTable;\nexport default FeesCollectionReactTable;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"EditableCell\");\n$RefreshReg$(_c3, \"GlobalFilter\");\n$RefreshReg$(_c4, \"Table\");\n$RefreshReg$(_c5, \"FeesCollectionReactTable\");","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/components/table/reactTable/ProfileReactTable.js"],"names":["dynamic","React","useAsyncDebounce","useExpanded","useFilters","useGlobalFilter","useGroupBy","usePagination","useRowSelect","useSortBy","useTable","matchSorter","ssr","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","length","e","target","value","undefined","EditableCell","initialValue","index","row","id","updateMyData","useState","setValue","onChange","onBlur","useEffect","defaultColumn","Cell","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","fuzzyTextFilterFn","rows","keys","values","autoRemove","val","Table","columns","data","skipReset","filterTypes","useMemo","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","Filter","autoResetPage","autoResetSelectedRows","disableMultiSort","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","Number","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","canGroupBy","getGroupByToggleProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","isGrouped","getToggleRowExpandedProps","isExpanded","subRows","isAggregated","isPlaceholder","Array","fill","i","FeesCollectionReactTable","profileTable","Header","accessor","Aggregated","s","skipResetRef","useRef","skipPageReset","setSkipPageReset","setData","rowIndex","columnId","old","current"],"mappings":"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","sourcesContent":["// A great library for fuzzy filtering/sorting items\r\n// import matchSorter from \"match-sorter\";\r\nimport dynamic from \"next/dynamic\";\r\nimport React from \"react\";\r\nimport {\r\n  useAsyncDebounce,\r\n  useExpanded,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useGroupBy,\r\n  usePagination,\r\n  useRowSelect,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\nconst matchSorter = dynamic(() => import(\"match-sorter\"), {\r\n  ssr: false,\r\n});\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      className=\"form-control\"\r\n      placeholder=\"\"\r\n    />\r\n  );\r\n}\r\n\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue);\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value);\r\n  };\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} />;\r\n};\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n};\r\n\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div id=\"example_filter\" className=\"dataTables_filter\">\r\n      <label class=\"d-flex align-items-center\">\r\n        <span className=\"mr-2\">Search:</span>\r\n\r\n        <input\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          className=\"form-control\"\r\n          placeholder=\"\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction Table({ columns, data, skipReset, updateMyData }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes,\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      disableMultiSort: true,\r\n      updateMyData,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect\r\n\r\n    // Here we will use a plugin to add our selection column\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_length\" id=\"example_length\">\r\n          <label className=\"d-flex align-items-center\">\r\n            <span className=\"mr-1\"> Show </span>\r\n            <div className=\"dropdown bootstrap-select\">\r\n              <select\r\n                value={pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n                className=\"btn dropdown-toggle btn-light\"\r\n              >\r\n                {[5, 10, 15, 20].map((pageSize) => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>{\" \"}\r\n            <span className=\"ml-1\">entries</span>\r\n          </label>\r\n        </div>\r\n\r\n        <GlobalFilter\r\n          preGlobalFilteredRows={preGlobalFilteredRows}\r\n          globalFilter={globalFilter}\r\n          setGlobalFilter={setGlobalFilter}\r\n        />\r\n      </div>\r\n      <table\r\n        {...getTableProps()}\r\n        className=\"display dataTable w-100\"\r\n        id=\"example\"\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}></span>\r\n                    ) : null}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.render(\"Header\")}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <img src=\"/images/sort_desc.png\" alt=\"desc\" />\r\n                        ) : (\r\n                          <img src=\"/images/sort_asc.png\" alt=\"asc\" />\r\n                        )\r\n                      ) : (\r\n                        <img src=\"/images/sort_both.png\" alt=\"both\" />\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? \"👇\" : \"👉\"}\r\n                          </span>{\" \"}\r\n                          {cell.render(\"Cell\")} ({row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        cell.render(\"Aggregated\")\r\n                      ) : cell.isPlaceholder ? null : (\r\n                        cell.render(\"Cell\")\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"d-flex d-flex justify-content-between align-items-center\">\r\n        <div className=\"dataTables_info\">\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </div>\r\n\r\n        <div className=\"dataTables_paginate paging_simple_numbers\">\r\n          <div\r\n            className=\"paginate_button previous disabled c-pointer\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            Previous\r\n          </div>\r\n          <span>\r\n            {Array(pageOptions.length)\r\n              .fill(\"_\")\r\n              .map((page, i) => (\r\n                <a\r\n                  className={`paginate_button c-pointer ${\r\n                    i === pageIndex ? \"current\" : \"\"\r\n                  }`}\r\n                  onClick={() => gotoPage(i)}\r\n                >\r\n                  {i + 1}\r\n                </a>\r\n              ))}\r\n          </span>\r\n          <div\r\n            className=\"paginate_button next c-pointer\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            Next\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeesCollectionReactTable({ profileTable }) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"\",\r\n        accessor: \"img\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => (\r\n          <img src={s.value} className=\"rounded-circle\" width=\"35\" alt=\"\" />\r\n        ),\r\n      },\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Department\",\r\n        accessor: \"department\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Gender\",\r\n        accessor: \"gender\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Education\",\r\n        accessor: \"education\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n      {\r\n        Header: \"Mobile\",\r\n        accessor: \"mobile\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => <strong>{`${s.value}`}</strong>,\r\n      },\r\n      {\r\n        Header: \"Email\",\r\n        accessor: \"email\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => <strong>{`${s.value}`}</strong>,\r\n      },\r\n      {\r\n        Header: \"Joining Date\",\r\n        accessor: \"date\",\r\n        Aggregated: ({ value }) => `${value}`,\r\n        Cell: (s) => `${s.value}`,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n  const skipResetRef = React.useRef(false);\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\r\n  const [data, setData] = React.useState(() => profileTable);\r\n\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true);\r\n    setData((old) =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  };\r\n  React.useEffect(() => {\r\n    skipResetRef.current = false;\r\n  }, [profileTable]);\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <div id=\"example_wrapper\" className=\"dataTables_wrapper\">\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          updateMyData={updateMyData}\r\n          skipPageReset={skipPageReset}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeesCollectionReactTable;\r\n"]},"metadata":{},"sourceType":"module"}