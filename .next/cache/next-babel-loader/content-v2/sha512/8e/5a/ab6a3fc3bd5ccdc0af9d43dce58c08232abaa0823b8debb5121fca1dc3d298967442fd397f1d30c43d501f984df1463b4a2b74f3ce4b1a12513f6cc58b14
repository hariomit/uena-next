{"ast":null,"code":"import _defineProperty from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BASIC_TABLE, BORDER_TABLE, DELETE_BORDER_TABLE, DELETE_EXAM_TOPPERS, DELETE_PROFILE_TABLE, DELETE_RECENT_PAYMENT_QUEUE, DELETE_TABLE_STRIPPED, EDIT_BORDER_TABLE, EDIT_EXAM_TOPPERS, EDIT_PROFILE_TABLE, EDIT_RECENT_PAYMENT_QUEUE, EDIT_TABLE_STRIPPED, EXAM_TOPPERS, FEE_TABLE, GET_BS_TABLE, PATIENT_TABLE, PROFILE_TABLE, RECENT_PAYMENT_QUEUE, TABLE_STRIPPED } from \"../action/type\";\n\nvar tableReducer = function tableReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case PROFILE_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profile: payload\n      });\n\n    case FEE_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fees: payload\n      });\n\n    case PATIENT_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        patient: payload\n      });\n\n    case BASIC_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        basic: payload\n      });\n\n    case DELETE_PROFILE_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profile: state.profile.filter(function (table, i) {\n          return i !== payload && table;\n        })\n      });\n\n    case EDIT_PROFILE_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profile: state.profile.map(function (table, i) {\n          return i == payload.id ? payload.data : table;\n        })\n      });\n    // bs table\n\n    case GET_BS_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bsTables: payload\n      });\n\n    case RECENT_PAYMENT_QUEUE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPayment: payload\n      });\n\n    case EXAM_TOPPERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        examTopper: payload\n      });\n\n    case BORDER_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        borderTable: payload\n      });\n\n    case TABLE_STRIPPED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tableStripped: payload\n      });\n\n    case DELETE_RECENT_PAYMENT_QUEUE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPayment: state.recentPayment.filter(function (table, i) {\n          return i !== payload && table;\n        })\n      });\n\n    case DELETE_BORDER_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        borderTable: state.borderTable.filter(function (table, i) {\n          return i !== payload && table;\n        })\n      });\n\n    case DELETE_TABLE_STRIPPED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tableStripped: state.tableStripped.filter(function (table, i) {\n          return i !== payload && table;\n        })\n      });\n\n    case DELETE_EXAM_TOPPERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        examTopper: state.examTopper.filter(function (table, i) {\n          return i !== payload && table;\n        })\n      });\n\n    case EDIT_RECENT_PAYMENT_QUEUE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        recentPayment: state.recentPayment.map(function (table, i) {\n          return i == payload.id ? payload.data : table;\n        })\n      });\n\n    case EDIT_EXAM_TOPPERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        examTopper: state.examTopper.map(function (table, i) {\n          return i == payload.id ? payload.data : table;\n        })\n      });\n\n    case EDIT_BORDER_TABLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        borderTable: state.borderTable.map(function (table, i) {\n          return i == payload.id ? payload.data : table;\n        })\n      });\n\n    case EDIT_TABLE_STRIPPED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tableStripped: state.tableStripped.map(function (table, i) {\n          return i == payload.id ? payload.data : table;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default tableReducer;","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/redux/reducer/tableReducer.js"],"names":["BASIC_TABLE","BORDER_TABLE","DELETE_BORDER_TABLE","DELETE_EXAM_TOPPERS","DELETE_PROFILE_TABLE","DELETE_RECENT_PAYMENT_QUEUE","DELETE_TABLE_STRIPPED","EDIT_BORDER_TABLE","EDIT_EXAM_TOPPERS","EDIT_PROFILE_TABLE","EDIT_RECENT_PAYMENT_QUEUE","EDIT_TABLE_STRIPPED","EXAM_TOPPERS","FEE_TABLE","GET_BS_TABLE","PATIENT_TABLE","PROFILE_TABLE","RECENT_PAYMENT_QUEUE","TABLE_STRIPPED","tableReducer","state","action","type","payload","profile","fees","patient","basic","filter","table","i","map","id","data","bsTables","recentPayment","examTopper","borderTable","tableStripped"],"mappings":"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","sourcesContent":["import {\r\n  BASIC_TABLE,\r\n  BORDER_TABLE,\r\n  DELETE_BORDER_TABLE,\r\n  DELETE_EXAM_TOPPERS,\r\n  DELETE_PROFILE_TABLE,\r\n  DELETE_RECENT_PAYMENT_QUEUE,\r\n  DELETE_TABLE_STRIPPED,\r\n  EDIT_BORDER_TABLE,\r\n  EDIT_EXAM_TOPPERS,\r\n  EDIT_PROFILE_TABLE,\r\n  EDIT_RECENT_PAYMENT_QUEUE,\r\n  EDIT_TABLE_STRIPPED,\r\n  EXAM_TOPPERS,\r\n  FEE_TABLE,\r\n  GET_BS_TABLE,\r\n  PATIENT_TABLE,\r\n  PROFILE_TABLE,\r\n  RECENT_PAYMENT_QUEUE,\r\n  TABLE_STRIPPED,\r\n} from \"../action/type\";\r\n\r\nconst tableReducer = (state = [], action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case PROFILE_TABLE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n      };\r\n    case FEE_TABLE:\r\n      return {\r\n        ...state,\r\n        fees: payload,\r\n      };\r\n    case PATIENT_TABLE:\r\n      return {\r\n        ...state,\r\n        patient: payload,\r\n      };\r\n    case BASIC_TABLE:\r\n      return {\r\n        ...state,\r\n        basic: payload,\r\n      };\r\n    case DELETE_PROFILE_TABLE:\r\n      return {\r\n        ...state,\r\n        profile: state.profile.filter((table, i) => i !== payload && table),\r\n      };\r\n    case EDIT_PROFILE_TABLE:\r\n      return {\r\n        ...state,\r\n        profile: state.profile.map((table, i) =>\r\n          i == payload.id ? payload.data : table\r\n        ),\r\n      };\r\n    // bs table\r\n    case GET_BS_TABLE:\r\n      return {\r\n        ...state,\r\n        bsTables: payload,\r\n      };\r\n    case RECENT_PAYMENT_QUEUE:\r\n      return {\r\n        ...state,\r\n        recentPayment: payload,\r\n      };\r\n    case EXAM_TOPPERS:\r\n      return {\r\n        ...state,\r\n        examTopper: payload,\r\n      };\r\n    case BORDER_TABLE:\r\n      return {\r\n        ...state,\r\n        borderTable: payload,\r\n      };\r\n    case TABLE_STRIPPED:\r\n      return {\r\n        ...state,\r\n        tableStripped: payload,\r\n      };\r\n    case DELETE_RECENT_PAYMENT_QUEUE:\r\n      return {\r\n        ...state,\r\n        recentPayment: state.recentPayment.filter(\r\n          (table, i) => i !== payload && table\r\n        ),\r\n      };\r\n    case DELETE_BORDER_TABLE:\r\n      return {\r\n        ...state,\r\n        borderTable: state.borderTable.filter(\r\n          (table, i) => i !== payload && table\r\n        ),\r\n      };\r\n    case DELETE_TABLE_STRIPPED:\r\n      return {\r\n        ...state,\r\n        tableStripped: state.tableStripped.filter(\r\n          (table, i) => i !== payload && table\r\n        ),\r\n      };\r\n    case DELETE_EXAM_TOPPERS:\r\n      return {\r\n        ...state,\r\n        examTopper: state.examTopper.filter(\r\n          (table, i) => i !== payload && table\r\n        ),\r\n      };\r\n    case EDIT_RECENT_PAYMENT_QUEUE:\r\n      return {\r\n        ...state,\r\n        recentPayment: state.recentPayment.map((table, i) =>\r\n          i == payload.id ? payload.data : table\r\n        ),\r\n      };\r\n    case EDIT_EXAM_TOPPERS:\r\n      return {\r\n        ...state,\r\n        examTopper: state.examTopper.map((table, i) =>\r\n          i == payload.id ? payload.data : table\r\n        ),\r\n      };\r\n    case EDIT_BORDER_TABLE:\r\n      return {\r\n        ...state,\r\n        borderTable: state.borderTable.map((table, i) =>\r\n          i == payload.id ? payload.data : table\r\n        ),\r\n      };\r\n    case EDIT_TABLE_STRIPPED:\r\n      return {\r\n        ...state,\r\n        tableStripped: state.tableStripped.map((table, i) =>\r\n          i == payload.id ? payload.data : table\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default tableReducer;\r\n"]},"metadata":{},"sourceType":"module"}