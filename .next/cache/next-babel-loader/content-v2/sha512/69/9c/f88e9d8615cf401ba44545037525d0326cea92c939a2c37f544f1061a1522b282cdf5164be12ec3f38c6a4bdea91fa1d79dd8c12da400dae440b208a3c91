{"ast":null,"code":"import _defineProperty from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\react-projects\\\\uena\\\\uena-final\\\\package\\\\src\\\\components\\\\forms\\\\pickers\\\\Gradient.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { GradientPickerPopover } from \"react-linear-gradient-picker\";\n\nvar rgbToRgba = function rgbToRgba(rgb) {\n  var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return rgb.replace(\"rgb(\", \"rgba(\").replace(\")\", \", \".concat(a, \")\"));\n};\n\nvar WrappedSketchPicker = function WrappedSketchPicker(_ref) {\n  var onSelect = _ref.onSelect,\n      rest = _objectWithoutProperties(_ref, [\"onSelect\"]);\n\n  return /*#__PURE__*/_jsxDEV(SketchPicker, _objectSpread(_objectSpread({}, rest), {}, {\n    color: rgbToRgba(rest.color, rest.opacity),\n    onChange: function onChange(c) {\n      var _c$rgb = c.rgb,\n          r = _c$rgb.r,\n          g = _c$rgb.g,\n          b = _c$rgb.b,\n          a = _c$rgb.a;\n      onSelect(\"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\"), a);\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = WrappedSketchPicker;\nvar initialPallet = [{\n  offset: \"0.00\",\n  color: \"rgb(238, 241, 11)\"\n}, {\n  offset: \"1.00\",\n  color: \"rgb(126, 32, 207)\"\n}];\n\nvar Gradient = function Gradient() {\n  _s();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(90),\n      angle = _useState2[0],\n      setAngle = _useState2[1];\n\n  var _useState3 = useState(initialPallet),\n      palette = _useState3[0],\n      setPalette = _useState3[1];\n\n  return /*#__PURE__*/_jsxDEV(GradientPickerPopover, _objectSpread(_objectSpread({}, {\n    open: open,\n    setOpen: setOpen,\n    angle: angle,\n    setAngle: setAngle,\n    showAnglePicker: true,\n    width: 220,\n    maxStops: 3,\n    paletteHeight: 32,\n    palette: palette,\n    onPaletteChange: setPalette\n  }), {}, {\n    children: /*#__PURE__*/_jsxDEV(WrappedSketchPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Gradient, \"TrsdjYQmPa6SM49WjPsZJOrpObY=\");\n\n_c2 = Gradient;\nexport default Gradient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WrappedSketchPicker\");\n$RefreshReg$(_c2, \"Gradient\");","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/components/forms/pickers/Gradient.js"],"names":["useState","SketchPicker","GradientPickerPopover","rgbToRgba","rgb","a","replace","WrappedSketchPicker","onSelect","rest","color","opacity","c","r","g","b","initialPallet","offset","Gradient","open","setOpen","angle","setAngle","palette","setPalette","showAnglePicker","width","maxStops","paletteHeight","onPaletteChange"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,MAAMC,CAAN,uEAAU,CAAV;AAAA,SAChBD,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,OAApB,EAA6BA,OAA7B,CAAqC,GAArC,cAA+CD,CAA/C,OADgB;AAAA,CAAlB;;AAGA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAXC,IAAW;;AACrD,sBACE,QAAC,YAAD,kCACMA,IADN;AAEE,IAAA,KAAK,EAAEN,SAAS,CAACM,IAAI,CAACC,KAAN,EAAaD,IAAI,CAACE,OAAlB,CAFlB;AAGE,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AAAA,mBACQA,CAAC,CAACR,GADV;AAAA,UACPS,CADO,UACPA,CADO;AAAA,UACJC,CADI,UACJA,CADI;AAAA,UACDC,CADC,UACDA,CADC;AAAA,UACEV,CADF,UACEA,CADF;AAEfG,MAAAA,QAAQ,eAAQK,CAAR,eAAcC,CAAd,eAAoBC,CAApB,QAA0BV,CAA1B,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAXD;;KAAME,mB;AAaN,IAAMS,aAAa,GAAG,CACpB;AAAEC,EAAAA,MAAM,EAAE,MAAV;AAAkBP,EAAAA,KAAK,EAAE;AAAzB,CADoB,EAEpB;AAAEO,EAAAA,MAAM,EAAE,MAAV;AAAkBP,EAAAA,KAAK,EAAE;AAAzB,CAFoB,CAAtB;;AAKA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACGlB,QAAQ,CAAC,KAAD,CADX;AAAA,MACdmB,IADc;AAAA,MACRC,OADQ;;AAAA,mBAEKpB,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEdqB,KAFc;AAAA,MAEPC,QAFO;;AAAA,mBAGStB,QAAQ,CAACgB,aAAD,CAHjB;AAAA,MAGdO,OAHc;AAAA,MAGLC,UAHK;;AAKrB,sBACE,QAAC,qBAAD,kCACM;AACFL,IAAAA,IAAI,EAAJA,IADE;AAEFC,IAAAA,OAAO,EAAPA,OAFE;AAGFC,IAAAA,KAAK,EAALA,KAHE;AAIFC,IAAAA,QAAQ,EAARA,QAJE;AAKFG,IAAAA,eAAe,EAAE,IALf;AAMFC,IAAAA,KAAK,EAAE,GANL;AAOFC,IAAAA,QAAQ,EAAE,CAPR;AAQFC,IAAAA,aAAa,EAAE,EARb;AASFL,IAAAA,OAAO,EAAPA,OATE;AAUFM,IAAAA,eAAe,EAAEL;AAVf,GADN;AAAA,2BAcE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAvBD;;GAAMN,Q;;MAAAA,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { GradientPickerPopover } from \"react-linear-gradient-picker\";\r\n\r\nconst rgbToRgba = (rgb, a = 1) =>\r\n  rgb.replace(\"rgb(\", \"rgba(\").replace(\")\", `, ${a})`);\r\n\r\nconst WrappedSketchPicker = ({ onSelect, ...rest }) => {\r\n  return (\r\n    <SketchPicker\r\n      {...rest}\r\n      color={rgbToRgba(rest.color, rest.opacity)}\r\n      onChange={(c) => {\r\n        const { r, g, b, a } = c.rgb;\r\n        onSelect(`rgb(${r}, ${g}, ${b})`, a);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst initialPallet = [\r\n  { offset: \"0.00\", color: \"rgb(238, 241, 11)\" },\r\n  { offset: \"1.00\", color: \"rgb(126, 32, 207)\" },\r\n];\r\n\r\nconst Gradient = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [angle, setAngle] = useState(90);\r\n  const [palette, setPalette] = useState(initialPallet);\r\n\r\n  return (\r\n    <GradientPickerPopover\r\n      {...{\r\n        open,\r\n        setOpen,\r\n        angle,\r\n        setAngle,\r\n        showAnglePicker: true,\r\n        width: 220,\r\n        maxStops: 3,\r\n        paletteHeight: 32,\r\n        palette,\r\n        onPaletteChange: setPalette,\r\n      }}\r\n    >\r\n      <WrappedSketchPicker />\r\n    </GradientPickerPopover>\r\n  );\r\n};\r\n\r\nexport default Gradient;\r\n"]},"metadata":{},"sourceType":"module"}