{"ast":null,"code":"import _defineProperty from \"D:/react-projects/uena/uena-final/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { WIDGET_BASIC } from \"../action/type\";\n\nvar widgetReducer = function widgetReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case WIDGET_BASIC:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default widgetReducer;","map":{"version":3,"sources":["D:/react-projects/uena/uena-final/package/src/redux/reducer/widgetReducer.js"],"names":["WIDGET_BASIC","widgetReducer","state","action","type","payload","data"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAAA,MACpCC,IADoC,GAClBD,MADkB,CACpCC,IADoC;AAAA,MAC9BC,OAD8B,GAClBF,MADkB,CAC9BE,OAD8B;;AAE5C,UAAQD,IAAR;AACE,SAAKJ,YAAL;AACE,6CACKE,KADL;AAEEI,QAAAA,IAAI,EAAED;AAFR;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,CAXD;;AAYA,eAAeD,aAAf","sourcesContent":["import { WIDGET_BASIC } from \"../action/type\";\r\n\r\nconst widgetReducer = (state = [], action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case WIDGET_BASIC:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default widgetReducer;\r\n"]},"metadata":{},"sourceType":"module"}